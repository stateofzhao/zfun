plugins {
    id 'com.android.library'
}

android {
    compileSdkVersion 32
    flavorDimensions 'aar'
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"
        /*multiDexEnabled true*/
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        //manifestPlaceholders = ["@QQ_APP_ID": ""]
    }

    sourceSets {
        main {
            /*if(project.hasProperty("QQ_APP_ID")){
                manifest.srcFile "src/main/useQQ/AndroidManifest.xml"
            }else {
                manifest.srcFile "src/main/AndroidManifest.xml"
            }*/
            manifest.srcFile "src/main/useQQ/AndroidManifest.xml"
        }
    }

    buildTypes {
        release {
            minifyEnabled true //如果自身作为module被其它模块直接引用，那么此处这个值仅针对自己有效
            //consumerProguardFiles：library模块使用的，consumerProguardFiles 配置的proguard文件会自动插入到 Application工程的 proguard 文件中。
            //proguardFiles        ：library模块和application模块都可以使用，用来指定自身proguard文件的，在编译时会根据指定的proguard文件来进行混淆。
            //【注意】consumerProguardFiles 配置的proguard文件在自身编译时不生效。
            //consumerProguardFiles 'consumer-rules.pro' //automatically add your proguard rules into your library user
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        sdk {
            dimension 'aar'
            consumerProguardFiles 'sdk-consumer-rules.pro'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'sdk-proguard-rules.pro'//自身打包成aar时如果开启了混淆，则使用sdk-proguard-rules.pro来混淆自己
        }
        lib {//作为本地module直接依赖也适用下面的规则
            dimension 'aar'
            //自身不进行混淆，但是通过consumerProguardFiles提供自身混淆规则，如果application工程开启混淆，会自动应用提供的规则。
            //由于目前android并没有在 productFlavors DSL块中提供 minifyEnabled 配置，所以我们放到了 proguard-rules 中来禁用混淆。
            consumerProguardFiles 'consumer-rules.pro'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.3.0'

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //微博
    compileOnly files('libs/openDefault-10.10.0.aar')
    //微信
    compileOnly 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:6.8.0'
}